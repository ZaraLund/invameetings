
@page "/eventpage"

@using InvaMeetings.Web.Data

@inject EventController service


<h1>Event List</h1>

<p>This component demonstrates fetching data from Database.</p>
<div class="form-group">
    <input type="button" data-toggle="modal" data-target="#eventPopup" class="btn btn-primary" value="Add Event" @onclick="(() => InitializeEventObject())" />

    <EventDetail EventObject=eventObject DataChanged="@DataChanged">

    </EventDetail>
    </div>

    @if (eventList == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Name:</th>
                    <th>Address:</th>
                    <th>Date:</th>
                    <th>Description:</th>
                    <th>Edit:</th>
                    <th>Delete:</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var eventItem in eventList)
                {
                    <tr>
                        <td>@eventItem.name</td>
                        <td>@eventItem.address</td>
                        <td>@eventItem.date</td>
                        <td>@eventItem.description</td>
                        <td><input type="button" class="btn btn-primary" value="Edit" /></td>
                        <td><input type="button" class="btn btn-danger" value="Delete" /></td>
                    </tr>
                }
            </tbody>
        </table>
    }
    <div>


    </div>




    @code {
        List<EventModel> eventList;
        EventModel eventObject = new EventModel();

        protected override async Task OnInitializedAsync()
        {
            eventList = await service.Get();
        }

        private void InitializeEventObject()
        {
            eventObject = new EventModel();
            eventObject.date = DateTime.Now;
        }

        private async void DataChanged()
        {
            eventList = await service.Get();
            StateHasChanged();
        }
    }
