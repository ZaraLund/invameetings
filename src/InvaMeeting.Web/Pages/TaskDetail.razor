@using InvaMeetings.Web.Data
@using InvaMeetings.Web
@inject EventController service


<div class="modal" tabindex="-1" role="dialog" id="taskModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Task Detail</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <EditForm Model="@TaskObject" OnValidSubmit="@HandleValidSubmit">
                    <div class="form-group">
                        <label for="taskName">Name</label>
                        <input type="hidden" @bind-value="@TaskObject.ID" />
                        <InputText id="name" class="form-control" @bind-Value="@TaskObject.name" />
                    </div>
                    <div class="form-group">
                        <label for="status">Status</label>
                        <InputSelect id="Summary" class="form-control"
                                     @bind-Value="TaskObject.address">
                       
                        </InputSelect>
                    </div>
                    <div class="form-group">
                        <label for="Date">date</label>
                        <input type="date" id="addition" name="math" @bind-value="@TaskObject.date" />
                    </div>
                    <button type="submit" class="btn btn-primary">Submit</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public EventModel TaskObject { get; set; }

    List<string> TaskStatusList = new List<string>() { "New", "In Progress", "Completed" };

    private async void HandleValidSubmit()
    {

    }
}