
@page "/event"
@inject IJSRuntime jsRuntime
@inject EventController eventService

@attribute [Authorize]
<h1>Event List</h1>

<AuthorizeView>
    <Authorized>
        @{ 
            var applicationUserId = context.User.AsApplicationUser().Id;
            Console.WriteLine("");
        }
    </Authorized>
</AuthorizeView>
<p>This component demonstrates data from Database.</p>

@if (eventList == null)
{
    <p><em>Loading...</em></p>
}

else
{
    <table class="table">
        <thead>
        <tr>
            <th>Name:</th>
            <th>Address:</th>
            <th>Date:</th>
            <th>Description:</th>
            <th>Join:</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var eventItem in eventList)
        {
            <tr>
                <td>@eventItem.name</td>
                <td>@eventItem.address</td>
                <td>@eventItem.date</td>
                <td>@eventItem.description</td>
                <td><input type="button" class="btn btn-primary" value="Join" /></td>
            </tr>
        }
        </tbody>
    </table>
}
<div>
</div>

@code {
    
    List<EventModel> eventList;

    protected override async Task OnInitializedAsync()
    {
        eventList = await eventService.Get();
    }
}