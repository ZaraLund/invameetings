
@inject EventController eventService
@inject IJSRuntime jsRuntime

<div class="modal fade" tabindex="-1" role="dialog" id="eventPopup">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@CustomHeader</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">x</span>
                </button>
            </div>
            <div class="modal-body">
                <EditForm Model="@EventObject" OnValidSubmit="@HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label for="taskName">Event Name</label>
                        <input type="hidden" @bind-value="@EventObject.EventId" />
                        <InputText id="name" class="form-control" @bind-Value="@EventObject.name" />
                        <ValidationMessage For="@(() => EventObject.name)" />

                    </div>
                    <div class="form-group">
                        <label for="taskName">Event Address</label>
                        <input type="hidden" @bind-value="@EventObject.address" />
                        <InputText id="address" class="form-control" @bind-Value="@EventObject.address" />
                        <ValidationMessage For="@(() => EventObject.address)" />

                    </div>

                    <div class="form-group">
                        <label for="taskName">Event Description</label>
                        <input type="hidden" @bind-value="@EventObject.description" />
                        <InputText id="description" class="form-control" @bind-Value="@EventObject.description" />
                        <ValidationMessage For="@(() => EventObject.description)" />
                    </div>
                    <div class="form-group">
                        <label for="dueDate"> Date</label>
                        <RadzenDatePicker @bind-Value="EventObject.date" TValue="DateTime?" ShowTime="true" DateFormat="yyyy/MM/dd HH:mm" Name="date" id="date" Style="display: block" />
                    </div>
                    <button type="submit" class="btn btn-primary">Submit</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public EventModel EventObject { get; set; }

    [Parameter]
    public Action DataChanged { get; set; }

    [Parameter]
    public RenderFragment CustomHeader { get; set; }

    private async Task CloseEventModal() {
        await jsRuntime.InvokeAsync<object>("CloseModal", "eventPopup");
    }

    private async void HandleValidSubmit() {
        if (EventObject.EventId == Guid.Empty) {
            await eventService.Add(EventObject);
        } else {
            await eventService.Update(EventObject);
        }

        await CloseEventModal();
        DataChanged?.Invoke();
    }
}
